@using DockerTest.Data.Entities
@model IEnumerable<DockerTest.Data.Entities.Link>

@{
    Layout = "_Layout";
    ViewBag.Title = "Links";
}

@{
    (string, string) GetColor(int? status)
    {
        var xx = status / 100;
        var value = status?.ToString();
        return xx switch {
            0 => ("border-danger text-info", "Не найдено"),
            2 => ("border-success text-success", value),
            3 => ("border-warning text-warning", value),
            4 => ("border-danger text-warning", value),
            5 => ("border-danger text-danger", value),
            _ => ("border-dark text-dark", "???")
            };
    }
}

<div class="mt-5"></div>
<h4>Создать ссылку</h4>
@using (Html.BeginForm("Add", "Link", FormMethod.Post, new {@class = "mt-3"}))
{
    <div class="form-group row">
        <div class="input-group">
            <div class="input-group-prepend">
                <label class="input-group-text">http://</label>
            </div>
            <input class="form-control col-md-5" type="text" maxlength="50" name="href" placeholder="Введите название ссылки...">
        </div>

        <div class="input-group mt-2">
            <div class="input-group-prepend">
                <label class="input-group-text">Количество шагов</label>
            </div>
            <input class="form-control col-md-1 text-center" type="number" minlength="1" name="countStep" value="6">
        </div>

        <div class="input-group mt-2">
            <div class="input-group-prepend">
                <label class="input-group-text">Время одного шага</label>
            </div>
            <input class="form-control col-md-1 text-center" type="number" step="0.1" minlength="0" name="tact" value="10">
            <div class="input-group-append">
                <label class="input-group-text">сек.</label>
            </div>
        </div>

        <input class="btn btn-primary mt-2" type="submit" value="Добавить">
    </div>
}

<div class="mt-4"></div>
<h4>Все ссылки</h4>

<div class="text-center mt-3">
    @foreach (var link in Model)
    {
        var (textColor, valueColor) = GetColor(link.Status);
        <div class="form-group row" style="align-items: center;">
            <div class="input-group-text">@link.Href</div>
            <div class="input-group-text border @(textColor) ml-2">@valueColor</div>
            @if (link.LinkStatus == LinkStatus.Processing)
            {
                <div class="input-group-text border border-primary text-primary ml-2">В обработке</div>
            }
            @if (link.Status is null)
            {
                var progress = (int) (100d * link.CurrentStep / link.CountStep);
                <div class="progress ml-2" style="width: 100px">
                    <div class="progress-bar bg-success" role="progressbar" style="width: @progress%" aria-valuenow="@progress" aria-valuemin="0" aria-valuemax="100">@progress%</div>
                </div>
            }
            <div class="btn btn-outline-danger ml-2" onclick="onDelete(@link.Id)">Удалить</div>
        </div>
    }
</div>

@section Scripts
{
    <script>
        function onDelete(id) {
            $.ajax({
                url: `/link/delete?id=${id}`,
                type: 'DELETE',
                success: function() {
                    location.reload();
                }
            });
        }
    </script>
}